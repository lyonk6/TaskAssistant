-- MySQL Script generated by MySQL Workbench
-- 02/20/16 15:21:32
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema task_assistant
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema task_assistant
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `task_assistant` DEFAULT CHARACTER SET utf8 ;
USE `task_assistant` ;

-- -----------------------------------------------------
-- Table `task_assistant`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`Users` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`Users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(128) NULL,
  `password` VARCHAR(256) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE INDEX `users_email_idx` ON `task_assistant`.`Users` (`email` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`tasklists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`tasklists` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`tasklists` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NULL,
  `description` VARCHAR(1024) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE INDEX `tasklists_name_idx` ON `task_assistant`.`tasklists` (`name` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`tasklist_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`tasklist_users` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`tasklist_users` (
  `user_id` INT NOT NULL,
  `tasklist_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `tasklist_id`),
  CONSTRAINT `tasklist_users_tasklist_id_fk`
    FOREIGN KEY (`tasklist_id`)
    REFERENCES `task_assistant`.`tasklists` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tasklist_users_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `task_assistant`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tasklist_users_tasklist_id_idx` ON `task_assistant`.`tasklist_users` (`tasklist_id` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`tasks` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`tasks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NULL,
  `note` BLOB NULL,
  `estimated_time` INT NULL,
  `invested_time` INT NULL,
  `important` TINYINT(1) NULL,
  `urgent` TINYINT(1) NULL,
  `deadline_date` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE INDEX `tasks_name_idx` ON `task_assistant`.`tasks` (`name` ASC);

CREATE INDEX `tasks_important_urgent_idx` ON `task_assistant`.`tasks` (`important` ASC, `urgent` ASC);

CREATE INDEX `tasks_deadline_date_idx` ON `task_assistant`.`tasks` (`deadline_date` DESC);

CREATE INDEX `tasks_estimated_time_idx` ON `task_assistant`.`tasks` (`estimated_time` ASC);

CREATE INDEX `tasks_invested_time_idx` ON `task_assistant`.`tasks` (`invested_time` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`tasklist_tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`tasklist_tasks` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`tasklist_tasks` (
  `tasklist_id` INT NOT NULL,
  `task_id` INT NOT NULL,
  PRIMARY KEY (`tasklist_id`, `task_id`),
  CONSTRAINT `tasklist_tasks_tasklist_id_fk`
    FOREIGN KEY (`tasklist_id`)
    REFERENCES `task_assistant`.`tasklists` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tasklist_tasks_task_id_fk`
    FOREIGN KEY (`task_id`)
    REFERENCES `task_assistant`.`tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tasklist_tasks_task_id_fk_idx` ON `task_assistant`.`tasklist_tasks` (`task_id` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`schedules`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`schedules` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`schedules` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `start_date` DATETIME NULL,
  `end_date` DATETIME NULL,
  `repeat_type` VARCHAR(128) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE INDEX `schedules_start_date_idx` ON `task_assistant`.`schedules` (`start_date` ASC);

CREATE INDEX `schedules_end_date_idx` ON `task_assistant`.`schedules` (`end_date` ASC);

CREATE INDEX `schedules_repeat_type_idx` ON `task_assistant`.`schedules` (`repeat_type` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`schedules_tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`schedules_tasks` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`schedules_tasks` (
  `schedule_id` INT NOT NULL,
  `task_id` INT NOT NULL,
  PRIMARY KEY (`schedule_id`, `task_id`),
  CONSTRAINT `schedules_tasks_schedule_id_fk`
    FOREIGN KEY (`schedule_id`)
    REFERENCES `task_assistant`.`schedules` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `schedules_tasks_task_id_fk`
    FOREIGN KEY (`task_id`)
    REFERENCES `task_assistant`.`tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `schedules_tasks_task_id_fk_idx` ON `task_assistant`.`schedules_tasks` (`task_id` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`Categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`Categories` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`Categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(128) NULL,
  `Description` VARCHAR(1024) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE INDEX `categories_name_idx` ON `task_assistant`.`Categories` (`Name` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`schedule_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`schedule_category` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`schedule_category` (
  `schedule_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`schedule_id`, `category_id`),
  CONSTRAINT `schedule_category_schedule_id_fk`
    FOREIGN KEY (`schedule_id`)
    REFERENCES `task_assistant`.`schedules` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `schedule_category_category_id_fk`
    FOREIGN KEY (`category_id`)
    REFERENCES `task_assistant`.`Categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `schedule_category_category_id_fk_idx` ON `task_assistant`.`schedule_category` (`category_id` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`Reminders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`Reminders` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`Reminders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `task_id` INT NULL,
  `reminder_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `reminders_task_id`
    FOREIGN KEY (`task_id`)
    REFERENCES `task_assistant`.`tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `reminders_task_id_idx` ON `task_assistant`.`Reminders` (`task_id` ASC, `reminder_time` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`category_tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`category_tasks` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`category_tasks` (
  `category_id` INT NOT NULL,
  `task_id` INT NOT NULL,
  PRIMARY KEY (`category_id`, `task_id`),
  CONSTRAINT `category_tasks_category_id_fk`
    FOREIGN KEY (`category_id`)
    REFERENCES `task_assistant`.`Categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `category_tasks_task_id_fk`
    FOREIGN KEY (`task_id`)
    REFERENCES `task_assistant`.`tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `category_tasks_task_id_fk_idx` ON `task_assistant`.`category_tasks` (`task_id` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`category_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`category_user` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`category_user` (
  `category_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`category_id`, `user_id`),
  CONSTRAINT `category_user_category_id_fk`
    FOREIGN KEY (`category_id`)
    REFERENCES `task_assistant`.`Categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `category_user_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `task_assistant`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `category_user_user_id_fk_idx` ON `task_assistant`.`category_user` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`Calendars`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`Calendars` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`Calendars` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NULL,
  `calendar_type` VARCHAR(128) NULL,
  `remote_id` VARCHAR(1024) NULL,
  `remote_token` VARCHAR(2048) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE INDEX `calendars_calendar_type_idx` ON `task_assistant`.`Calendars` (`calendar_type` ASC);


-- -----------------------------------------------------
-- Table `task_assistant`.`user_calendars`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `task_assistant`.`user_calendars` ;

CREATE TABLE IF NOT EXISTS `task_assistant`.`user_calendars` (
  `user_id` INT NOT NULL,
  `calendar_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `calendar_id`),
  CONSTRAINT `user_calendars_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `task_assistant`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_calendars_calendars_id_fk`
    FOREIGN KEY (`calendar_id`)
    REFERENCES `task_assistant`.`Calendars` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_calendars_calendars_id_fk_idx` ON `task_assistant`.`user_calendars` (`calendar_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
